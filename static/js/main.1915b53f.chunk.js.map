{"version":3,"sources":["components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","getMovies","API","fetch","then","res","json","data","console","log","results","onClick","window","location","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMA2BeA,EAlBF,SAAC,GAAD,IALOC,EAKLC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,YAAYC,EAApB,EAAoBA,SAASC,EAA7B,EAA6BA,aAA7B,OACT,qBAAKC,UAAU,QAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKC,IAVF,mCAUgBJ,EAAcK,IAAKN,IACtC,sBAAKI,UAAU,cAAf,UACI,+BAAKJ,EAAL,OACA,sBAAMI,UAAW,QAXbL,EAWoCI,EAVrDJ,GAAM,EAAU,QAChBA,GAAM,EAAU,SACZ,OAQS,SAAwDI,OAG5D,sBAAKC,UAAU,aAAf,UACI,2CACA,4BAAIF,aC+CLK,MA3Df,WAAgB,IAAD,EACaC,mBAAU,IADvB,mBACNC,EADM,KACEC,EADF,OAEqBF,mBAAU,IAF/B,mBAENG,EAFM,KAEMC,EAFN,KAIbC,qBAAU,WACRC,EATgB,yHAWhB,IAEF,IAAMA,EAAU,SAACC,GACfC,MAAMD,GACLE,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZV,EAAUU,EAAKG,aAoBnB,OACE,qCACE,mCACE,wBAAQC,QAAS,kBAAKC,OAAOC,SAAW,KAAxC,SAEA,wCAEA,sBAAMC,SAvBS,SAACC,GACpBA,EAAEC,iBAEElB,IAEFG,EAzBY,6FAyBSH,GACrBC,EAAc,MAiBZ,SAEA,uBAAOR,UAAU,SACjB0B,KAAK,SACLC,YAAY,YACZC,SAhBgB,SAACJ,GACrBhB,EAAcgB,EAAEK,OAAOC,QAgBnBA,MAAOvB,SAIX,qBAAKP,UAAU,kBAAf,SACGK,EAAO0B,OAAS,GACd1B,EAAO2B,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,eAA2BA,GAAdA,EAAMC,aCjDnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1915b53f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst IMG_API= \"https://image.tmdb.org/t/p/w1280\";\r\n  \r\nconst setvoteClass=(vote)=>{\r\nif(vote>=8) return \"green\"\r\nif(vote>=6) return \"orange\"\r\nreturn \"red\";\r\n}\r\nconst Movie= ({title,poster_path,overview,vote_average})=>(\r\n    <div className=\"movie\">\r\n        <div className=\"movie-header\"> \r\n            <img src= {IMG_API+poster_path}  alt={title}/> \r\n            <div className=\"movie-info \">\r\n                <h3>{title} </h3>\r\n                <span className={\"tag\"+\" \"+setvoteClass(vote_average)}>{vote_average}</span>\r\n\r\n            </div>\r\n            <div className=\"movie-over\">\r\n                <h2>Overview:</h2>\r\n                <p>{overview}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nexport default Movie; \r\n \r\n\r\n","import Movie from \"./components/Movie\";\r\n//import './App.css';\r\n\r\nimport React , {useEffect, useState} from \"react\";\r\nconst FEATURED_API= \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&query=\";\r\n\r\nconst SEARCH_API= \"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\r\n\r\nfunction App() {\r\n  const [movies, setMovies]=useState ([]);\r\n  const [searchTerm, setSearchTerm]=useState (\"\");\r\n\r\n  useEffect(()=>{\r\n    getMovies(FEATURED_API);\r\n    \r\n  },[]);\r\n\r\n  const getMovies=(API)=>{\r\n    fetch(API)\r\n    .then((res)=>res.json())\r\n    .then((data)=>{\r\n      console.log(data);\r\n      setMovies(data.results);\r\n    }); \r\n  }\r\n\r\n  const handleOnSubmit=(e)=>{\r\n    e.preventDefault();\r\n\r\n    if (searchTerm){\r\n    \r\n      getMovies(SEARCH_API+searchTerm)\r\n      setSearchTerm(\"\");\r\n    }\r\n      \r\n\r\n  }\r\n\r\n  const handleaOnChange=(e)=>{\r\n    setSearchTerm(e.target.value);\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <header > \r\n        <button onClick={()=> window.location = '/' }>\r\n\r\n        <h2>Home</h2>\r\n        </button>\r\n        <form onSubmit={handleOnSubmit}>\r\n\r\n        <input className=\"search\"\r\n        type=\"search\"\r\n        placeholder=\"Search...\"\r\n        onChange={handleaOnChange}\r\n        value={searchTerm}/>\r\n\r\n        </form>\r\n      </header>\r\n    <div className=\"movie-container\">\r\n      {movies.length > 0 &&\r\n         movies.map((movie) => <Movie key ={movie.id} {...movie} />)}\r\n    </div>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}